# ---------------------------------------------------------------------------------
#  /\_/\  üåê This module was loaded through https://t.me/hikkamods_bot
# ( o.o )  üîê Licensed under the CC BY-NC-ND 4.0.
#  > ^ <   ‚ö†Ô∏è Owner of heta.hikariatama.ru doesn't take any responsibilities or intellectual property rights regarding this script
# ---------------------------------------------------------------------------------
# Name                                           : Randomizer
# Description                                    : No description
# Author                                         : D4n13l3k00
# Commands                                       :
# .rndint | .rndelm | .rnduser
# ---------------------------------------------------------------------------------


# .------.------.------.------.------.------.------.------.------.------.
# |D.--. |4.--. |N.--. |1.--. |3.--. |L.--. |3.--. |K.--. |0.--. |0.--. |
# |                                              :/\: | :/\: | :(): | :/\: | :(): | :/\: | :(): | :/\: | :/\: | :/\: |
# | (__) |                                       :\/: | ()() | (__) | ()() | (__) | ()() | :\/: | :\/: | :\/: |
# | '--'D| '--'4| '--'N| '--'1| '--'3| '--'L| '--'3| '--'K| '--'0| '--'0|
# `------`------`------`------`------`------`------`------`------`------'
#
#                     Copyright 2022 t.me/D4n13l3k00
#           Licensed under the Creative Commons CC BY-NC-ND 4.0
#
#                    Full license text can be found at:
#       https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode
#
#                           Human-friendly one:
#            https://creativecommons.org/licenses/by-nc-nd/4.0

# meta developer: @D4n13l3k00


import random
import re

from .. import loader, utils


@loader.tds
class RandomizerMod(loader.Module):
    strings = {"name": "–†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä"}
    prefix = "<b>[–†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä]</b>\n"

    @loader.owner
    async def rndintcmd(self, m):
        ".rndint <int> <int> - —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ–æ –¥–∏–∞–ø–æ–∑–æ–Ω–∞"
        args = utils.get_args_raw(m)
        check = re.compile(r"^(\d+)\s+(\d+)$")
        if check.match(args):
            fr, to = check.match(args).groups()
            if int(fr) < int(to):
                rndint = random.randint(int(fr), int(to))
                await m.edit(
                    self.prefix
                    + "<b>–†–µ–∂–∏–º:</b> –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –¥–∏–∞–ø–æ–∑–æ–Ω–∞\n<b>–î–∏–∞–ø–æ–∑–æ–Ω:</b>"
                    f" <code>{fr}-{to}</code>\n<b>–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ:</b>"
                    f" <code>{rndint}</code>"
                )
            else:
                await m.edit(f"{self.prefix}–í–∞—Å—è, —É–∫–∞–∂–∏ –¥–∏–∞–ø–æ–∑–æ–Ω —á–∏—Å–µ–ª!")
        else:
            await m.edit(f"{self.prefix}–í–∞—Å—è, —É–∫–∞–∂–∏ –¥–∏–∞–ø–æ–∑–æ–Ω —á–∏—Å–µ–ª!")

    @loader.owner
    async def rndelmcmd(self, m):
        ".rndelm <—ç–ª–µ–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é> - —Ä–∞–Ω–¥–æ–º–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞"
        args = utils.get_args_raw(m)
        if not args:
            await m.edit(f"{self.prefix}–í–∞—Å—è, –Ω–∞–ø–∏—à–∏ —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!")
            return
        lst = [i.strip() for i in args.split(",") if i]
        await m.edit(
            self.prefix
            + "<b>–†–µ–∂–∏–º:</b> –†–∞–Ω–¥–æ–º–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞\n<b>–°–ø–∏—Å–æ–∫:</b>"
            f" <code>{', '.join(lst)}</code>\n<b>–í—ã–ø–∞–ª–æ:</b>"
            f" <code>{random.choice(lst)}</code>"
        )

    @loader.owner
    async def rndusercmd(self, m):
        ".rnduser - –≤—ã–±–æ—Ä —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —é–∑–µ—Ä–∞ –∏–∑ —á–∞—Ç–∞"
        if not m.chat:
            await m.edit(f"{self.prefix}<b>–≠—Ç–æ –Ω–µ —á–∞—Ç</b>")
            return
        users = await m.client.get_participants(m.chat)
        user = random.choice(users)
        status = user.status if user.status else "–Ω–µ—Ç —Å—Ç–∞—Ç—É—Å–∞"
        await m.edit(
            self.prefix
            + "<b>–†–µ–∂–∏–º:</b> –†–∞–Ω–¥–æ–º–Ω—ã–π —é–∑–µ—Ä –∏–∑ —á–∞—Ç–∞\n<b>–Æ–∑–µ—Ä:</b> <a"
            f' href="tg://user?id={user.id}">{user.first_name}</a> |'
            f" <code>{user.id}</code>\n<b>–ö–µ–º –±—ã–ª/–ß—Ç–æ –¥–µ–ª–∞–ª:</b> {status}"
        )
